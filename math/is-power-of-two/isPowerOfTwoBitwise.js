/**
 * @param {number} number
 * @return {boolean}
 */

function isPowerOfTwoBitwise(number){
	// 1が最小の2の累乗のため1より小さい数は2の累乗ではない
	if(number<1){
		return false
	}

	// 2の累乗のバイナリ形式は常に1ビットのみが設定される。
	// 1: 0001
	// 2: 0010
	// 4: 0100
	// 8: 1000
	// 例外は符号付整数 ex)-128:10000000 ただし負の数は最初にreturnされる
	// なのでnumberが2の累乗の場合それから1引いた数と元のnumberのビット論理積は0になる
	return (number & (number - 1)) === 0
}

// おまけ
// const a = 5;        // 00000000000000000000000000000101
// const b = 4;        // 00000000000000000000000000000100
// console.log(a & b); // 00000000000000000000000000000100
// とした場合a,bの両方で1の位置のビットが1ので返される。
// 100は10進数で4なのでコンソールに4と出る